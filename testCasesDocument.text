Test document for RewardPointsSummary  component
	•	RewardPointsSummary component fetch data from local json , 
	    calculates the customer reward points for each transaction,monthly, and the total reward points and displays them to relative tables.
	•	The tests in this document are used to verify the correct functionality of the RewardPointsSummary component.

Mock data – Is used to simulate the response from an API service.
Test Suite – RewardPointsSummary component.
	•	Importing the required react testing library functions, RewardPointsSummary component & data fetching function.
	•	Used before each function to mock the API response with mock data before each test.


Test Case – Component renders correctly with loading state
	•	Test steps –
	•	Render the RewardPointsSummary component.
	•	Check if the heading text "Customers Reward Points Summary" is displaying correctly.
	•	Check if the spinner is rendered.
	•	Check if the error and tables are not rendered.

	•	Validations –
	•	The heading text "Customers Reward Points Summary" should be in the document.
	•	Spinner element should be present in the document.
	•	Error and table elements should not be present in the document.

Test Case – Component renders correctly with error state
	•	Test steps –
	•	Render the RewardPointsSummary component.
	•	Check if the heading text "Customers Reward Points Summary" is displaying correctly.
	•	Check if the error is rendered.
	•	Check if the spinner and tables are not rendered.

	•	Validations –
	•	Error element should be present in the document.
	•	Spinner and table elements should not be present in the document.

Test Case – Shoula handle the negative amount
	•	Test steps –
	•	Render the RewardPointsSummary component.
	•	Check if the reward points tables is rendered.
	•	Check if the spinner and error are not rendered.
	•	Validate the reward points data for each customer.

	•	Validations –
	•	Reward points tables should be present in the document.
	•	Spinner and error elements should not be present in the document.
	.   If price is negative amount, then reward points should be 0.

Test Case – Should handle the larger amount
	•	Test steps –
	•	Render the RewardPointsSummary component.
	•	Check if the reward points tables is rendered.
	•	Check if the spinner and error are not rendered.
	•	Validate the reward points data for each customer.

	•	Validations –
	•	Reward points tables should be present in the document.
	•	Spinner and error elements should not be present in the document.
	.   If price is larger amount amount like 100000, then reward points should be 199850.

Test Case – Should handles the decimal amount 
	•	Test steps –
	•	Render the RewardPointsSummary component.
	•	Check if the reward points tables is rendered.
	•	Check if the spinner and error are not rendered.
	•	Validate the reward points data for each customer.

	•	Validations –
	•	Reward points tables should be present in the document.
	•	Spinner and error elements should not be present in the document.
	.   If price is 90.2, then reward points should be  40.


Test Case – Should handle when price is over $100
	•	Test steps –
	•	Render the RewardPointsSummary component.
	•	Check if the reward points tables is rendered.
	•	Check if the spinner and error are not rendered.
	•	Validate the reward points data for each customer.

	•	Validations –
	•	Reward points tables should be present in the document.
	•	Spinner and error elements should not be present in the document.
	.   If price is 150, then reward points should be 150.

Test Case – Should handle when price is between 50 and 100
	•	Test steps –
	•	Render the RewardPointsSummary component.
	•	Check if the reward points tables is rendered.
	•	Check if the spinner and error are not rendered.
	•	Validate the reward points data for each customer.

	•	Validations –
	•	Reward points tables should be present in the document.
	•	Spinner and error elements should not be present in the document.
	.   If price is 80, then reward points should be 30.

Test Case – Should handle when price is $50
	•	Test steps –
	•	Render the RewardPointsSummary component.
	•	Check if the reward points tables is rendered.
	•	Check if the spinner and error are not rendered.
	•	Validate the reward points data for each customer.

	•	Validations –
	•	Reward points tables should be present in the document.
	•	Spinner and error elements should not be present in the document.
	.   If price is 50, then reward points should be 0.

Test Case – Should handle when price is lessthan 50
	•	Test steps –
	•	Render the RewardPointsSummary component.
	•	Check if the reward points tables is rendered.
	•	Check if the spinner and error are not rendered.
	•	Validate the reward points data for each customer.

	•	Validations –
	•	Reward points tables should be present in the document.
	•	Spinner and error elements should not be present in the document.
	.   If price is 30, then reward points should be 0.

Test Case – Component renders correctly with rewardPoints tables
	•	Test steps –
	•	Render the RewardPointsSummary component.
	•	Check if the reward points tables is rendered.
	•	Check if the spinner and error are not rendered.
	•	Validate the reward points data for each customer.

	•	Validations –
	•	Reward points tables should be present in the document.
	•	Spinner and error elements should not be present in the document.
	.   If price is 90.2, then reward points should be  40.

	.  Last 3 Months Reward Points table -
	•  Reward points for "July 2024" should be displayed as
		John Doe: transaction price 150,hence reward points = (150 – 100) * 2 + 50 = 150
		John Doe: transaction price 230.20,hence reward points = (230.20 – 100) * 2 + 50 = 310

    •  Reward points for "June 2024" should be displayed as
	    John Doe: transaction price 120,hence reward points = (120 – 100) * 2 + 50 = 90
		John Doe: transaction price 350.40,hence reward points = (350.40 – 100) * 2 + 50 = 551

	•  Reward points for "May 2024" should be displayed as
	    John Doe: transaction price 90,hence reward points = (90 – 50) * 1 = 40

	Hence Total Reward Points = 460 + 641 + 40 == 1141;

    .  Total Reward Points table -
	•  Total Reward points for "John Doe" should be displayed as 1141
       hence Total reward points = 460 + 641 + 40 + 0 = 1141

    .  Reward Points for each transaction - 
	•  Reward points for "John Doe" should be displayed as
		July 2024: transaction amount = 150, hence reward points = (150 – 100) * 2 + 50 = 150
		July 2024: transaction amount  = 230.20, hence reward points = (230.20 – 100) * 2 + 50 = 310
		June 2024: transaction amount  = 120, hence reward points = (120 – 100) * 2 + 50 = 90
		June 2024: transaction amount  = (120,350.40), hence reward points = (350.40 – 100) * 2 + 50 = 551
		May 2024: transaction amount  = 90, hence reward points = (90 – 50) * 1 = 40
		December 2023: transaction amount = 50, hence reward points = 0


test cases results for all repo

---------------------------------------------|---------|----------|---------|---------|-------------------
File                                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
---------------------------------------------|---------|----------|---------|---------|-------------------
All files                                    |   87.77 |    88.23 |    92.3 |    87.5 |                   
 src                                         |      45 |        0 |   33.33 |      45 |                   
  App.js                                     |     100 |      100 |     100 |     100 |                   
  constants.js                               |     100 |      100 |     100 |     100 |                   
  index.js                                   |       0 |      100 |     100 |       0 | 7-17              
  logger.js                                  |     100 |      100 |     100 |     100 |                   
  reportWebVitals.js                         |       0 |        0 |       0 |       0 | 1-8               
 src/components/customerRecentMonthlyRewards |     100 |      100 |     100 |     100 |                   
  customerRecentMonthlyRewards.js            |     100 |      100 |     100 |     100 |                   
 src/components/customerTotalRewards         |     100 |      100 |     100 |     100 |                   
  customerTotalRewards.js                    |     100 |      100 |     100 |     100 |                   
 src/components/customerTransactions         |     100 |      100 |     100 |     100 |                   
  customerTransactions.js                    |     100 |      100 |     100 |     100 |                   
 src/modules/rewardPointsSummary             |     100 |      100 |     100 |     100 |                   
  rewardPointsSummary.js                     |     100 |      100 |     100 |     100 |                   
 src/services                                |     100 |      100 |     100 |     100 |                   
  apiService.js                              |     100 |      100 |     100 |     100 |                   
  rewardPointsService.js                     |     100 |      100 |     100 |     100 |                   
 src/utils/commonFunctions                   |     100 |      100 |     100 |     100 |                   
  rewardPoints.js                            |     100 |      100 |     100 |     100 |                   
 src/utils/commonFunctions/calculator        |     100 |      100 |     100 |     100 |                   
  calculator.js                              |     100 |      100 |     100 |     100 |                   
---------------------------------------------|---------|----------|---------|---------|-------------------

Test Suites: 3 passed, 3 total
Tests:       23 passed, 23 total
Snapshots:   0 total
Time:        1.248 s, estimated 2 s
Ran all test suites.